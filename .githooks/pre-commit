#!/bin/bash
# Fast pre-commit hook for Gartan Scraper Bot
# Minimal checks for immediate feedback - full validation done in pre-push

set -e

echo "🔍 Running fast pre-commit checks..."

# Check if we're in the right directory
if [ ! -f "run_bot.py" ]; then
    echo "❌ Error: Not in project root directory"
    exit 1
fi

# Check Python syntax (only staged files)
echo "🐍 Checking Python syntax..."
staged_py=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.py$' || true)
if [ -n "$staged_py" ]; then
    echo "$staged_py" | xargs python -m py_compile || {
        echo "❌ Python syntax errors found"
        exit 1
    }
fi

# Auto-format with Black & isort (only staged files for speed)
echo "🧹 Auto-formatting (black & isort)..."
if [ -n "$staged_py" ]; then
    if command -v black >/dev/null 2>&1; then
        echo "$staged_py" | xargs black --quiet 2>/dev/null || true
    fi
    if command -v isort >/dev/null 2>&1; then
        echo "$staged_py" | xargs isort --quiet 2>/dev/null || true
    fi
    
    # Re-stage any formatting changes
    if [ -n "$(git diff --name-only $staged_py 2>/dev/null || true)" ]; then
        git add $staged_py
    fi
fi

# Quick core tests (only if core files changed)
core_files=$(git diff --cached --name-only --diff-filter=ACM | grep -E '(run_bot|api_server|db_store|parse_grid|gartan_fetch)\.py$' || true)
if [ -n "$core_files" ]; then
    echo "🧪 Running core tests (core files modified)..."
    python -m pytest tests/test_db_store.py tests/test_parse_grid.py -q || {
        echo "❌ Core tests failed"
        exit 1
    }
else
    echo "✅ No core files modified, skipping tests"
fi

# Check that required files exist (only if they might be affected)
modified_files=$(git diff --cached --name-only --diff-filter=D || true)
if echo "$modified_files" | grep -qE '(requirements\.txt|Dockerfile|docker-compose\.yml|\.env\.example)'; then
    echo "📂 Checking required files..."
    required_files=("requirements.txt" "Dockerfile" "docker-compose.yml" ".env.example")
    for file in "${required_files[@]}"; do
        if [ ! -f "$file" ]; then
            echo "❌ Required file missing: $file"
            exit 1
        fi
    done
fi

echo "✅ Fast pre-commit checks passed!"
